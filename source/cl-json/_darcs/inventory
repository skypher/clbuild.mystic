Starting with tag:
[TAG 0.3.2
henrik@evahjelte.com**20071228151244] 
[Added CLOS / MOP infrastructure.
boris.smilga@gmail.com**20071223151000] 
[Added decoding of objects to CLOS objects, hash tables or alists.
boris.smilga@gmail.com**20071223151334] 
[Added decoding of arrays to vectors or lists.
boris.smilga@gmail.com**20071223151610] 
[Added WITH-OLD-DECODER-SEMANTICS.
boris.smilga@gmail.com**20071223151705] 
[Added encoding of CLOS objects, and prototypes for alists and hash tables.
boris.smilga@gmail.com**20071223151744] 
[renamed some parameters like constants
Henrik Hjelte <henrik@evahjelte.com>**20071228145823] 
[move around some stuff, made testcases work for old semantics
Henrik Hjelte <henrik@evahjelte.com>**20071228150818
 if you call set-list-decoder-semantics before (5am:run 'json)
 the 101 old testcases work ok.
] 
[put old style semantics as default
Henrik Hjelte <henrik@evahjelte.com>**20071228152325
 until the clos objects are integrated,
 have testcases, all tests run ok.
] 
[changed name of with-old-decoder-semantics to with-list-decoder-semantics
Henrik Hjelte <henrik@evahjelte.com>**20071228170803] 
[Updated some testcases to work with arrays as well as lists
Henrik Hjelte <henrik@evahjelte.com>**20071228170926] 
[restore list-decoder defaults 
Henrik Hjelte <henrik@evahjelte.com>**20080105100011
 for backwards compatibility, some
 of my old code broke with the new default
 variable values
] 
[todo file
Henrik Hjelte <henrik@evahjelte.com>**20080114144149] 
[get rid of some newly introduced compiler warnings
Henrik Hjelte <henrik@evahjelte.com>**20080120091410] 
[encode as p-list (by Hans HÃ¼bner)
Henrik Hjelte <henrik@evahjelte.com>**20080318233313] 
[Fixed handling of package which resulted in test failure.
boris.smilga@gmail.com**20071231145109
 The program failed TEST*JSON-SYMBOLS-PACKAGE*.  That was due to the
 manner of operation of WITH-OLD-DECODER-SEMANTICS which worked
 essentially by supplying a canonical prototype, so that the decoder
 has a preconception of what kind of object to create--and where to
 intern names.  The last part was clearly wrong: there should be no
 such preconception, as the user might be setting *JSON-SYMBOLS-PACKAGE*
 (outside WITH-OLD-DECODER-SEMANTICS) to a non-default value, and it is
 this value rather than the one supplied in the prototype that should
 be obeyed.
] 
[Fixed MAKE-OBJECT-PROTOTYPE (T) so that MAX-PACKAGE ignores STANDARD-OBJECT superclass.
boris.smilga@gmail.com**20071231153300
 When constructing an anonymous class, an empty list of superclasses is
 defaulted to '(STANDARD-OBJECT).  Now if we have all slot names in the
 package KEYWORD the correct behaviour would be to return that package,
 but STANDARD-OBJECT is not in KEYWORD.  (Another bug in
 MAKE-OBJECT-PROTOTYPE (T) led to the deduced maximum package being
 COMMON-LISP, and even if we fixed that, we'd have MAX-PACKAGE issuing
 warnings.)  The solution is to have STANDARD-OBJECT removed from the
 list of superclasses before it is passed to MAX-PACKAGE.
] 
[Added with-clos-decoder-semantics.
boris.smilga@gmail.com**20080707140716] 
[Fixed JSON-BIND to intern symbols at run-time instead of compile-time.
Boris Smilga <boris.smilga@gmail.com>**20080717182703
 JSON-BIND has not been updated after the introduction of *JSON-SYMBOLS-PACKAGE*
 on 2007-03-24.  If that variable were then set to some other package than
 KEYWORD, the expansion of JSON-BIND would include unquoted symbols (i.e.
 possibly unbound variables).  Even worse, the call to #'JSON-INTERN was
 in the matrix expansion code, and as such performed at compile time, thus
 invalidating the very idea of *JSON-SYMBOLS-PACKAGE* as a means of user
 customization.
 
] 
[Fixed tests that failed because of *JSON-SYMBOLS-PACKAGE* / *PACKAGE* mismatches.
Boris Smilga <boris.smilga@gmail.com>**20080718104229] 
[Fixed some testcases that failed due to globally set CLOS semantics or the value of *PROTOTYPE-NAME*.
Boris Smilga <boris.smilga@gmail.com>**20080718142154] 
[Reapplying the changes in JSON-FACTORY-MAKE-OBJECT which previously have been breaking some test cases.
Boris Smilga <boris.smilga@gmail.com>**20080718142245
 They were therefore undone by patch Fri Dec 28 18:08:18 MSK 2007  Henrik Hjelte <henrik@evahjelte.com>.
 The test cases in question run OK now.
] 
[Added a default ENCODE-JSON method for everything which is not explicitly handled.
Boris Smilga <boris.smilga@gmail.com>**20080718144624] 
[Added JSON:PROTOTYPE as exported name.
Boris Smilga <boris.smilga@gmail.com>**20080723163819] 
[Added some test cases for decoder CLOS semantics and prototypes.
Boris Smilga <boris.smilga@gmail.com>**20080723163916] 
[Added two flavours of the customizable decoder.
Boris Smilga <boris.smilga@gmail.com>**20080819095543] 
[removed dependency of parenscript
Henrik Hjelte <henrik@evahjelte.com>**20081207231440
 Ignore-this: 74c15466131f15875a6af12a21d3cbfa
 copies some functions to symboltojs
] 
[removed parenscript link from homepage
Henrik Hjelte <henrik@evahjelte.com>**20081207232353
 Ignore-this: 2f7a109517e6cd1db91ae7b06ccb9d07
] 
[Fixed: classes for CLOS encoder / decoder in the tests were ending up unfinalized.
Boris Smilga <boris.smilga@gmail.com>**20081208111036] 
[Patch for OpenMCL/ClozureCL by Ian Eslick 
Henrik Hjelte <henrik@evahjelte.com>**20090226122225
 Ignore-this: 3a301a9494d8e7b0b122a365de2a96a2
 It works around a problem in ANSI interpretation that crops up in OpenMCL/ClozureCL but not in the other lisps.
] 
[TAG Pre-0.4-bundle
Henrik Hjelte <henrik@evahjelte.com>**20090414085958
 Ignore-this: 91e69af5b92fef3c3298463937b9fb72
] 